show tables;

select * from test ;


create table LOAN_PAY1  
clone test 


delete from test ;

select * from test ;

//Cloning 
    SELECT * FROM OUR_FIRST_DB.PUBLIC.  

    CREATE TABLE OUR_FIRST_DB.PUBLIC.LOAN_PAY1_CLONE1 
    CLONE  OUR_FIRST_DB.PUBLIC.LOAN_PAY1   

//Validate the Data 
SELECT * FROM OUR_FIRST_DB.PUBLIC.LOAN_PAY1_CLONE1   

SHOW TABLES IN OUR_FIRST_DB.PUBLIC;

//Update Cloned table
UPDATE OUR_FIRST_DB.PUBLIC.LOAN_PAY1_CLONE1   
SET GENDER = null

SELECT * FROM OUR_FIRST_DB.PUBLIC.LOAN_PAY1_CLONE1
 SELECT * FROM OUR_FIRST_DB.PUBLIC.LOAN_PAY1  

 

SHOW TABLES IN OUR_FIRST_DB.PUBLIC;


//Cloning a temporary table is not possible 
CREATE OR REPLACE TEMPORARY TABLE  OUR_FIRST_DB.PUBLIC.TEMP_TABLE (id INT)

CREATE TABLE OUR_FIRST_DB.PUBLIC.TEMP_TABLE_copy
CLONE OUR_FIRST_DB.PUBLIC.TEMP_TABLE

//Temp table cannot be cloned to a permanent table; clone to a transient table instead.
//But we can clone temporary to temporary 


// Cloning Schema
CREATE TRANSIENT SCHEMA OUR_FIRST_DB.COPIED_SCHEMA
CLONE OUR_FIRST_DB.PUBLIC;

SELECT * FROM COPIED_SCHEMA.LOAN_PAY1


CREATE TRANSIENT SCHEMA OUR_FIRST_DB.EXTERNAL_STAGES_COPIED
CLONE MANAGE_DB.EXTERNAL_STAGES;



// Cloning Database
CREATE TRANSIENT DATABASE OUR_FIRST_DB_COPY
CLONE OUR_FIRST_DB;

DROP DATABASE OUR_FIRST_DB_COPY
DROP SCHEMA OUR_FIRST_DB.EXTERNAL_STAGES_COPIED
DROP SCHEMA OUR_FIRST_DB.COPIED_SCHEMA



SELECT * FROM OUR_FIRST_DB.PUBLIC.LOAN_PAY1 ;  --449


DELETE  FROM OUR_FIRST_DB.PUBLIC.LOAN_PAY1 WHERE  PRINCIPAL >= 500


SELECT * FROM OUR_FIRST_DB.COPIED_SCHEMA.LOAN_PAY1 ; -- 7.8K 


ALTER TABLE OUR_FIRST_DB.COPIED_SCHEMA.LOAN_PAY1 
 SWAP WITH OUR_FIRST_DB.PUBLIC.LOAN_PAY1  


